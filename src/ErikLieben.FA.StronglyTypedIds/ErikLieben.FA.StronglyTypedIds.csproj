<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <DebugType>portable</DebugType>

    <!-- NuGet package metadata -->
    <PackageId>ErikLieben.FA.StronglyTypedIds</PackageId>
    <PackageVersion Condition="'$(PackageVersion)' == '' and '$(Version)' != ''">$(Version)</PackageVersion>
    <Title>ErikLieben.FA.StronglyTypedIds</Title>
    <Authors>Erik Lieben</Authors>
    <Company>Erik Lieben</Company>
    <Description>Lightweight strongly typed ID primitives and helpers for .NET.</Description>
    <PackageTags>strongly-typed;ids;value-object;dotnet;csharp</PackageTags>

    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>

    <!-- Symbol package settings -->
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>

    <!-- The generator dependency defaults to the same version as this package, but can be overridden via /p:GeneratorPackageVersion -->
    <GeneratorPackageVersion Condition="'$(GeneratorPackageVersion)' == ''">$(PackageVersion)</GeneratorPackageVersion>
  </PropertyGroup>

  <ItemGroup>
    <!-- Pull in the source generator transitively for consumers -->
    <PackageReference Include="ErikLieben.FA.StronglyTypedIds.Generator" Version="$(GeneratorPackageVersion)" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive" />
  </ItemGroup>

  <ItemGroup>
    <!-- Include repository root README and LICENSE in the package root -->
    <None Include="..\\..\\README.md" Pack="true" PackagePath="" />
    <None Include="..\\..\\LICENSE" Pack="true" PackagePath="" />
  </ItemGroup>

</Project>
